name: Publish openai-agents-arcade

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (leave empty to use version from pyproject.toml)"
        required: false

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Test openai-agents-arcade # TODO: add `make tests` when we have tests
        working-directory: .
        run: |
          make sync
          make lint

      - name: Set version if provided
        if: inputs.version != ''
        working-directory: .
        run: |
          uv bump ${{ inputs.version }}

      - name: Publish to PyPI
        id: publish
        working-directory: .
        run: |
          uv build
          export PYPI_TOKEN=${{ secrets.PYPI_TOKEN }}
          # Extract version from pyproject.toml using uv and save it
          VERSION=$(uv version --short)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          if uv publish --skip-existing 2>&1 | grep -q "File exists. Skipping"; then
            echo "Version already exists on PyPI. Skipping publish."
            echo "skip_publish=true" >> $GITHUB_OUTPUT
          else
            echo "skip_publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Send status to Slack
        if: steps.publish.outputs.skip_publish != 'true'
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.PACKAGE_RELEASE_SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
          payload: |
            {
              "status": "${{ job.status }}",
              "package": "agents-arcade",
              "version": "${{ env.VERSION }}",
              "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }